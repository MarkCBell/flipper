
if __name__ == '__main__':
	from random import randint
	M = Matrix([[0, 1, 1, -1, 0, 0],[0, 1, -1, 1, 0, 0],[0, -1, 1, 1, 0, 0],[1, 0, 1, 0, -1, 0],[1, 0, -1, 0, 1, 0],[-1, 0, 1, 0, 1, 0],[-1, 1, 0, 0, 0, 1],[1, -1, 0, 0, 0, 1],[1, 1, 0, 0, 0, -1],[0, 0, 0, 1, 1, -1],[0, 0, 0, 1, -1, 1],[0, 0, 0, -1, 1, 1],[0, 1, -1, -1, 0, 0],[1, 0, -1, 0, -1, 0],[-1, 1, 0, 1, -1, 0],[0, -1, 0, 0, 1, 0],[0, 0, 1, 0, -2, 1],[0, 1, -1, 0, 1, -1],[0, -1, 0, 0, 1, 0],[-1, 2, -2, 1, 2, -2],[1, -1, 0, -1, 1, 0],[0, 1, 0, 0, -1, 0],[0, 0, -1, 0, 2, -1],[0, -1, 1, 0, -1, 1],[0, 1, 0, 0, -1, 0],[1, -2, 2, -1, -2, 2],[0, 1, -1, 0, 1, -1],[1, -1, 0, -1, 1, 0],[0, -1, 1, 0, -1, 1],[0, -1, 1, 0, -1, 1],[-1, 1, -2, 1, 1, 0],[0, 1, -1, 0, 1, -1],[0, -1, 1, 0, -1, 1],[-1, 2, -1, 1, 0, -1],[0, 1, -1, 0, 1, -1],[0, 1, -1, 0, 1, -1],[-1, 4, -1, 1, -2, -1],[-1, 3, 0, 1, -3, 0]], 6)
	print(M.nontrivial_polytope())
	exit(1)
	for i in range(10000):
		M = Matrix([[randint(-100,100) for i in range(3)] for j in range(5)], 3)
		print('==M==')
		print(M)
		print(M.nontrivial_polytope())